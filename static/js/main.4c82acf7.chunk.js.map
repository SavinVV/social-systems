{"version":3,"sources":["components/Order/OrderHeader.tsx","components/Order/OrderItem.tsx","components/Order/index.ts","components/Order/Order.tsx","components/Button/index.ts","components/Button/Button.tsx","components/Modal/ItemForContentModal.tsx","components/Modal/PostContentForModal.tsx","components/Modal/AccountContentForModal.tsx","components/Modal/Modal.tsx","components/Modal/index.ts","components/App/App.tsx","components/App/index.ts","index.js"],"names":["OrderHeader","сustomerName","сustomerPhoto","orderType","socialNetwork","link","split","className","src","alt","href","OrderItem","observer","props","progress","makeObservable","counterInteval","setInterval","Math","round","counter","volume","setCounter","clearInterval","this","itemName","itemImgName","toFixed","value","Component","observable","action","Order","orderItems","order","numberOfSubscribers","numberOflikes","numberOfReposts","map","item","Button","text","width","onClick","style","ItemForContentModal","onChangeInput","e","target","replace","String","length","slice","join","setTotalPrice","calcTotalPrice","totalPrice","getTotalNumber","type","defaultValue","onChange","floor","price","PostContentForModal","likeTotalPrice","repostTotalPrice","setLikeTotalPrice","caclTotalPrice","setRepostTotalPrice","likePrice","repostPrice","onChangeNumberOflikes","onChangeNumberOfReposts","AccountContentForModal","subscribersTotalPrice","setSubscribersTotalPrice","subscriberPrice","onChangeNumberOfSubscribers","Modal","orderLink","checkValidationLink","test","setSocialNetworkAndOrderType","checkValidationData","onChangeLink","redWarning","document","querySelector","inputImg","inputLink","classList","add","borderColor","remove","onAddBtn","oreder","addOrderItem","closeModal","setNumberOflikes","num","setActiveAddBtn","setNumberOfReposts","setNumberOfSubscribers","placeholder","addBtnIsActive","testOrder","App","toggleModalIsOpen","orders","index","modalIsOpen","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c82acf7.chunk.js","sourcesContent":["import'./orderStyle.css';\r\nimport { IOrderHeader } from '../../interfaces/OrderInterfaces';\r\n\r\nconst OrderHeader = ({сustomerName, сustomerPhoto, orderType, socialNetwork, link}: IOrderHeader) => {\r\n    const checkCorrectLink = () => {\r\n        if (link.split(':')[0] !== 'https' || link.split(':')[0] !== 'https') {\r\n            link = 'https://' + link;\r\n        }\r\n    }\r\n    checkCorrectLink();\r\n    return (\r\n        <div className=\"orderItem orderHeader\">\r\n            <div className=\"orderItemContainer\">\r\n                <div className=\"orderItemImg\">\r\n                    <img src={`./img/${сustomerPhoto}`} alt=\"img\" />\r\n                </div>\r\n                <div className=\"orderItemContent\">\r\n                    <p>{сustomerName}</p>\r\n                    <a href={link}>{`${orderType} ${socialNetwork}`}</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderHeader;","import'./orderStyle.css';\r\nimport { Component } from \"react\";\r\nimport { observer } from \"mobx-react\"; \r\nimport { observable, action, makeObservable } from \"mobx\";\r\nimport { IOrderItem } from '../../interfaces/OrderInterfaces';\r\n\r\n@observer\r\nclass OrderItem extends Component<IOrderItem>{\r\n    @observable counter = 0;\r\n    progress = 0;\r\n\r\n    constructor(props: IOrderItem) {\r\n        super(props);\r\n        makeObservable(this);\r\n    }\r\n\r\n    @action\r\n    setCounter = () => {\r\n        if (this.props.volume <= 10) {\r\n            this.counter += 1;\r\n            this.progress += 1/this.props.volume;\r\n        } else {\r\n            this.counter += this.props.volume/10;\r\n            this.progress += 0.1;\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const counterInteval = setInterval(() => {\r\n            if (Math.round(this.counter) < this.props.volume) {\r\n                this.setCounter();\r\n            } else {\r\n                clearInterval(counterInteval);\r\n            }\r\n        }, 1000)\r\n    }\r\n    render() {\r\n        const {itemName, itemImgName, volume} = this.props;\r\n        return (\r\n            <div className=\"orderItem\">\r\n                <div className=\"orderItemContainer\">\r\n                    <div className=\"orderItemImg\">\r\n                        <img src={`./img/${itemImgName}`} alt={itemName} />\r\n                    </div>\r\n                    <div className=\"orderItemContent\">\r\n                        <p className=\"orderItemName\">{itemName}</p>\r\n                        <p>{this.counter.toFixed()} / {volume}</p>\r\n                        <progress value={this.progress}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderItem;","import Order from \"./Order\";\r\nexport default Order;","import OrderHeader from \"./OrderHeader\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport'./orderStyle.css';\r\nimport { IOrder } from \"../../interfaces/OrderInterfaces\";\r\n\r\nconst Order = ({order}: IOrder) => {\r\n    let orderItems;\r\n    if (order.orderType === 'Аккаунт') {\r\n        orderItems = [\r\n            <OrderItem\r\n                itemName={'Подписчики'}\r\n                itemImgName={'subscribers.svg'}\r\n                volume={order.numberOfSubscribers as number}\r\n                key={'subscribers'}/>\r\n        ]\r\n    } else {\r\n        orderItems = [\r\n            <OrderItem\r\n                itemName={'Лайки'}\r\n                itemImgName={'like.svg'}\r\n                volume={order.numberOflikes as number}\r\n                key={'likes'}/>,\r\n            <OrderItem\r\n                itemName={'Репосты'}\r\n                itemImgName={'repost.svg'}\r\n                volume={order.numberOfReposts as number}\r\n                key={'reposts'}/>\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div className=\"order\">\r\n            <OrderHeader\r\n                    сustomerName={'Андрей Иванович'}\r\n                    сustomerPhoto={order.сustomerPhoto}\r\n                    orderType={order.orderType}\r\n                    socialNetwork={order.socialNetwork}\r\n                    link={order.link}/>\r\n            {orderItems.map(item => item)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order;","import Button from \"./Button\";\r\nexport default Button;","import './ButtonStyle.css';\r\nimport { IButton } from '../../interfaces/ButtonInterfaces';\r\n\r\nconst Button = ({ className, text, width, onClick}:IButton) => {\r\n    return (\r\n        <div className={`btn ${className}`} style={{width: width}} onClick={onClick}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import './modalStyle.css';\r\nimport { IItemForContentModal } from '../../interfaces/ModalInterfaces';\r\nimport { Component } from \"react\";\r\nimport { observer } from \"mobx-react\"; \r\nimport { observable, action, makeObservable } from \"mobx\";\r\n\r\n@observer\r\nclass ItemForContentModal extends Component<IItemForContentModal>{\r\n    @observable totalPrice = 0;\r\n\r\n    constructor(props: IItemForContentModal) {\r\n        super(props);\r\n        makeObservable(this);\r\n    }\r\n\r\n    @action\r\n    setTotalPrice = (value: number) => {\r\n        this.totalPrice = Math.floor((value * this.props.price));\r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        e.target.value = e.target.value.replace(/\\D/g,'');\r\n        if (String(e.target.value).length > 6) {\r\n            e.target.value = e.target.value.slice(0, 7);\r\n        }\r\n        e.target.value = e.target.value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\r\n        if (e.target.value === '') {\r\n            e.target.value = 0;\r\n        }\r\n        if (e.target.value.length > 1 && e.target.value[0] === '0') {\r\n            e.target.value = e.target.value.slice(1, e.target.value.length);\r\n        }\r\n        \r\n        let value = e.target.value !== '' ? +e.target.value.split(' ').join('') : 0;\r\n        this.setTotalPrice(value)\r\n        this.props.calcTotalPrice(this.totalPrice);\r\n        this.props.getTotalNumber(value);\r\n    }\r\n\r\n    render() {\r\n        const {itemName, itemImgName} = this.props;\r\n        return (\r\n            <div className=\"modalItem wrapper\">\r\n                <div className='modalItemContent'>\r\n                    <div className=\"modalItemImg\">\r\n                        <img src={`./img/${itemImgName}`} alt={itemName} />\r\n                    </div>\r\n                    <p>{itemName}</p>\r\n                </div>\r\n                <div className='modalItemPriceBlock'>\r\n                    <input type=\"text\" defaultValue={0} onChange={e => this.onChangeInput(e)}/>\r\n                    <p>{`${this.totalPrice} ₽`}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemForContentModal;","import './modalStyle.css';\r\nimport { IPostContentForModal } from '../../interfaces/ModalInterfaces';\r\nimport { Component } from \"react\";\r\nimport ItemForContentModal  from './ItemForContentModal';\r\n\r\nclass PostContentForModal extends Component<IPostContentForModal>{\r\n    likeTotalPrice = 0;\r\n    repostTotalPrice = 0;\r\n\r\n    setLikeTotalPrice = (likeTotalPrice: number) => {\r\n        this.likeTotalPrice = likeTotalPrice;\r\n        const totalPrice = this.likeTotalPrice + this.repostTotalPrice;\r\n        this.props.caclTotalPrice(totalPrice);\r\n    }\r\n\r\n    setRepostTotalPrice = (repostTotalPrice: number) => {\r\n        this.repostTotalPrice = repostTotalPrice;\r\n        const totalPrice = this.likeTotalPrice + this.repostTotalPrice;\r\n        this.props.caclTotalPrice(totalPrice);\r\n    }\r\n\r\n    render() {\r\n        const {socialNetwork} = this.props;\r\n        const likePrice = socialNetwork === 'instagram' ? 5 : 2;\r\n        const repostPrice = socialNetwork === 'instagram' ? 1.3 : 2.2;\r\n        return (\r\n            <div className=\"modalItemsBlock\">\r\n                <ItemForContentModal\r\n                    itemName={'Лайки'}\r\n                    itemImgName={'like.svg'}\r\n                    price={likePrice}\r\n                    calcTotalPrice={this.setLikeTotalPrice}\r\n                    getTotalNumber={this.props.onChangeNumberOflikes}/>\r\n                <ItemForContentModal\r\n                    itemName={'Репосты'}\r\n                    itemImgName={'repost.svg'}\r\n                    price={repostPrice}\r\n                    calcTotalPrice={this.setRepostTotalPrice}\r\n                    getTotalNumber={this.props.onChangeNumberOfReposts}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostContentForModal;","import './modalStyle.css';\r\nimport { Component } from \"react\";\r\nimport ItemForContentModal  from './ItemForContentModal';\r\nimport { IAccountContentForModal } from '../../interfaces/ModalInterfaces';\r\n\r\nclass AccountContentForModal extends Component<IAccountContentForModal>{\r\n    subscribersTotalPrice = 0;\r\n\r\n    setSubscribersTotalPrice = (subscribersTotalPrice: number) => {\r\n        this.subscribersTotalPrice = subscribersTotalPrice;\r\n        this.props.caclTotalPrice(subscribersTotalPrice);\r\n    }\r\n\r\n    render() {\r\n        const {socialNetwork} = this.props;\r\n        const subscriberPrice = socialNetwork === 'instagram' ? 5 : 4;\r\n        return (\r\n            <div className=\"modalItemsBlock\">\r\n                <ItemForContentModal\r\n                    itemName={'Подписчики'}\r\n                    itemImgName={'subscribers.svg'}\r\n                    price={subscriberPrice}\r\n                    calcTotalPrice={this.setSubscribersTotalPrice}\r\n                    getTotalNumber={this.props.onChangeNumberOfSubscribers}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccountContentForModal;","import './modalStyle.css';\r\nimport { IModal } from '../../interfaces/ModalInterfaces';\r\nimport { Component } from \"react\";\r\nimport { observer } from \"mobx-react\"; \r\nimport { observable, action, makeObservable } from \"mobx\";\r\nimport Button from '../Button';\r\nimport PostContentForModal from './PostContentForModal';\r\nimport AccountContentForModal from './AccountContentForModal';\r\nimport { IOrderData } from '../../interfaces/OrderInterfaces';\r\n\r\n@observer\r\nclass Modal extends Component<IModal>{\r\n    @observable addBtnIsActive = false;\r\n    @observable socialNetwork = '';\r\n    @observable orderType = '';\r\n    @observable totalPrice = 0;\r\n    сustomerName = 'Андрей Иванович';\r\n    сustomerPhoto = 'avatar.svg';\r\n    orderLink = '';\r\n    numberOflikes = 0;\r\n    numberOfReposts = 0;\r\n    numberOfSubscribers = 0;\r\n\r\n    constructor(props: IModal) {\r\n        super(props);\r\n        makeObservable(this);\r\n    }\r\n\r\n    @action\r\n    setSocialNetworkAndOrderType = (socialNetwork = '', orderType = '') => {\r\n        this.socialNetwork = socialNetwork;\r\n        this.orderType = orderType;\r\n    }\r\n\r\n    @action\r\n    setActiveAddBtn = (value: boolean) => {\r\n        this.addBtnIsActive = value;\r\n    }\r\n\r\n    @action\r\n    setTotalPrice = (totalPrice: number) => {\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    checkValidationLink = (): boolean => {\r\n        const instAccountReg = /^(?:(?:http|https):\\/\\/)?(?:www.)?(?:instagram.com)\\/(\\w+)\\/?$/igm;\r\n        const instPostReg = /^(?:(?:http|https):\\/\\/)?(?:www.)?(?:instagram.com)\\/(\\p)\\/([a-zA-Z0-9_-]+)\\/?$/igm;\r\n        const vkAccountReg = /^(?:(?:http|https):\\/\\/)?(?:vk.com)\\/([a-zA-Z0-9_-]+)\\/?$/igm;\r\n        const vkPostReg = /^(?:(?:http|https):\\/\\/)?(?:vk.com)\\/([a-zA-Z0-9_-]+)(\\?w=wall)([a-zA-Z0-9%_-]+)\\/?$/igm;\r\n        \r\n        if (instPostReg.test(this.orderLink)) {\r\n            this.setSocialNetworkAndOrderType('Инстаграм', 'Пост');\r\n            return true;\r\n        } else if (instAccountReg.test(this.orderLink)) {\r\n            this.setSocialNetworkAndOrderType('Инстаграм', 'Аккаунт');\r\n            return true;\r\n        } else if (vkPostReg.test(this.orderLink)) {\r\n            this.setSocialNetworkAndOrderType('ВК', 'Пост');\r\n            return true;\r\n        } else if (vkAccountReg.test(this.orderLink)) {\r\n            this.setSocialNetworkAndOrderType('ВК', 'Аккаунт');\r\n            return true;\r\n        } else {\r\n            this.setSocialNetworkAndOrderType();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    checkValidationData = (): boolean => {\r\n        if (this.numberOflikes || this.numberOfReposts || this.numberOfSubscribers) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onChangeLink = (e: any) => {\r\n        this.orderLink = e.target.value;\r\n        const redWarning = document.querySelector('.redWarning');\r\n        const inputImg = document.querySelector('.inputImg img');\r\n        const inputLink = document.querySelector('.modalInput');\r\n        if (this.checkValidationLink()) {\r\n            redWarning?.classList.add('hiden');\r\n            e.target.style.borderColor = '#ececec';\r\n            inputImg?.classList.remove('hiden');\r\n            inputLink?.classList.add('inputWithImg');\r\n        } else if (this.orderLink === '') {\r\n            redWarning?.classList.add('hiden');\r\n            e.target.style.borderColor = '#ececec';\r\n            inputImg?.classList.add('hiden');\r\n            inputLink?.classList.remove('inputWithImg');\r\n        } else {\r\n            this.setSocialNetworkAndOrderType();\r\n            this.setTotalPrice(0);\r\n            redWarning?.classList.remove('hiden');\r\n            e.target.style.borderColor = '#ff6a6a';\r\n            inputImg?.classList.add('hiden');\r\n            inputLink?.classList.remove('inputWithImg');\r\n        }\r\n    }\r\n\r\n    onAddBtn = () => {\r\n        if (this.checkValidationData()) {\r\n            const oreder: IOrderData = {\r\n                сustomerName: this.сustomerName,\r\n                сustomerPhoto: this.сustomerPhoto,\r\n                orderType: this.orderType,\r\n                socialNetwork: this.socialNetwork,\r\n                link: this.orderLink,\r\n                numberOflikes: this.numberOflikes,\r\n                numberOfReposts: this.numberOfReposts,\r\n                numberOfSubscribers: this.numberOfSubscribers\r\n            } \r\n            this.props.addOrderItem(oreder);\r\n            this.props.closeModal();\r\n        }\r\n    }\r\n\r\n    setNumberOflikes = (num: number) => {\r\n        this.numberOflikes = num;\r\n        this.checkValidationData() ? this.setActiveAddBtn(true) : this.setActiveAddBtn(false);\r\n    }\r\n\r\n    setNumberOfReposts = (num: number) => {\r\n        this.numberOfReposts = num;\r\n        this.checkValidationData() ? this.setActiveAddBtn(true) : this.setActiveAddBtn(false);\r\n    }\r\n\r\n    setNumberOfSubscribers = (num: number) => {\r\n        this.numberOfSubscribers = num;\r\n        this.checkValidationData() ? this.setActiveAddBtn(true) : this.setActiveAddBtn(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='modalContainer'>\r\n            <div className='modal'>\r\n                <div className='modalHeader'>\r\n                    <p>Оформление заказа</p>\r\n                </div>\r\n                <div className='modalContent'>\r\n                    <div className='linkBlockContainer'>\r\n                        <div className=\"linkBlock wrapper\">\r\n                            <span>Укажите ссылку на то, что хотите продвинуть</span>\r\n                            <div className='linkContainer'>\r\n                                <input className='modalInput' type=\"text\" placeholder='Введите ссылку' onChange={ e => this.onChangeLink(e)}/>\r\n                                <div className='inputImg'>\r\n                                    <img src={this.socialNetwork === 'ВК' ? './img/vk.svg' : './img/instagram.svg'} alt=\"socialNetwork\" className='hiden'/>\r\n                                </div>\r\n                            </div>\r\n                            <p className='redWarning hiden'>Некорректная ссылка</p>\r\n                        </div>\r\n                    </div>\r\n                    { this.orderType === 'Аккаунт' ?\r\n                    <AccountContentForModal\r\n                        caclTotalPrice={this.setTotalPrice}\r\n                        socialNetwork={this.socialNetwork}\r\n                        onChangeNumberOfSubscribers={this.setNumberOfSubscribers}/> :\r\n                    this.orderType  === 'Пост' ?\r\n                    <PostContentForModal\r\n                        caclTotalPrice={this.setTotalPrice}\r\n                        socialNetwork={this.socialNetwork}\r\n                        onChangeNumberOflikes={this.setNumberOflikes}\r\n                        onChangeNumberOfReposts={this.setNumberOfReposts}/> :\r\n                        ''\r\n                    }              \r\n                </div>\r\n                <div className='modalFooter'>\r\n                    <div className='modalFooterPrice'>\r\n                        <span>Итого:&ensp;</span><p>{String(this.totalPrice).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')} руб.</p>\r\n                    </div>\r\n                    <div className='footerBtns'>\r\n                        <Button\r\n                            className={'greyBtn'}\r\n                            text=\"Закрыть\"\r\n                            onClick={this.props.closeModal}/>\r\n                        <Button\r\n                            className={this.addBtnIsActive ? '' : 'disabledRedBtn'}\r\n                            text=\"Добавить\"\r\n                            onClick={this.onAddBtn}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Modal;","import Modal from \"./Modal\";\r\nexport default Modal;","import './appStyle.css'\r\nimport { IOrderData } from '../../interfaces/OrderInterfaces';\r\nimport { Component } from \"react\";\r\nimport { observer } from \"mobx-react\"; \r\nimport { observable, action, makeObservable } from \"mobx\";\r\nimport Order from \"../Order\";\r\nimport Button from \"../Button\";\r\nimport Modal from '../Modal';\r\n\r\nconst testOrder: IOrderData = {\r\n    сustomerName: 'Андрей Иванович',\r\n    сustomerPhoto: 'avatar.svg',\r\n    orderType: 'Аккаунт',\r\n    socialNetwork: 'Инстаграм',\r\n    link: 'https://www.instagram.com/test/',\r\n    numberOflikes: 0,\r\n    numberOfReposts: 0,\r\n    numberOfSubscribers: 10000,\r\n}\r\n\r\n@observer\r\nclass App extends Component {\r\n    @observable modalIsOpen = false;\r\n    @observable orders: IOrderData[] = [testOrder];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        makeObservable(this);\r\n    }\r\n\r\n    @action\r\n    toggleModalIsOpen = () => {\r\n        this.modalIsOpen = !this.modalIsOpen;\r\n    }\r\n\r\n    @action\r\n    addOrderItem = (item: IOrderData) => {\r\n        this.orders.push(item);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <div className='appContainer'>\r\n                    <Button\r\n                        className={'addOrderBtn'}\r\n                        text=\"Добавить заказ\"\r\n                        onClick={this.toggleModalIsOpen}/>\r\n                    {this.orders.map((item, index) => {\r\n                        return (\r\n                            <Order\r\n                                order={item}\r\n                                key={item.сustomerName + index}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n                {this.modalIsOpen ? \r\n                    <Modal \r\n                    closeModal={this.toggleModalIsOpen}\r\n                    addOrderItem={this.addOrderItem}/> : \r\n                    ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import App from \"./App\";\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}